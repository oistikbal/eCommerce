name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test with Coverage
      run: |
        # Ensure root-level TestResults directory exists
        mkdir -p ./TestResults
        # Run tests, forcing coverage output to root TestResults
        dotnet test --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput="./TestResults/coverage.cobertura.xml"
    
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.4
      with:
        reports: ./TestResults/coverage.cobertura.xml
        targetdir: ./CoverageReport
        reporttypes: Html;Badges
        assemblyfilters: +eCommerce.UserService;+eCommerce.ProductService
        classfilters: -eCommerce.ProductService.Protos.V1;-eCommerce.UserService.Protos.V1;-eCommerce.ProductService.Migrations;-eCommerce.UserService.Migrations
        title: eCommerce
    
    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./CoverageReport
        force_orphan: true